/*====================================================================================================*/
/*====================================================================================================*/
/*===============================      Name    : Mahmoud Azmy      ===================================*/
/*===============================      Date    : 21/9/2024         ===================================*/
/*===============================      SWC     : GPIO              ===================================*/
/*===============================      Version : 1.0               ===================================*/
/*====================================================================================================*/
/*====================================================================================================*/
#ifndef GPIO_INTERFACE_H
#define GPIO_INTERFACE_H


/*====================================================================================================*/
/*===================================      Port Type enum     ========================================*/
/*====================================================================================================*/

typedef enum
{
	PORTA=0,
	PORTB,
	PORTC,
	PORTD,
	PORTE,
	PORTH  
}Port_t;

/*====================================================================================================*/
/*===================================      Pin Number enum     =======================================*/
/*====================================================================================================*/

typedef enum
{
	PIN0=0 ,
	PIN1   ,
	PIN2   ,
	PIN3   ,
	PIN4   ,
	PIN5   ,
	PIN6   ,
	PIN7   ,
	PIN8   ,
	PIN9   ,
	PIN10  ,
	PIN11  ,
	PIN12  ,
	PIN13  ,
	PIN14  ,
	PIN15
}Pin_t;

/*====================================================================================================*/
/*===================================      Mode Type enum     ========================================*/
/*====================================================================================================*/

typedef enum 
{
	INPUT=0,
	OUTPUT ,
	ALTERNATE_FUNCTION,
	ANZLOG 
}Mode_t;



/*====================================================================================================*/
/*====================================     Output Speed  enum    =====================================*/
/*====================================================================================================*/

typedef enum 
{
	LOW_SPEED=0,
	MEDIUM_SPEED,
	HIGH_SPEED,
	VERY_HIGH_SPEED
}OutputSpeed_t;



/*====================================================================================================*/
/*=====================================     Output type enum    ======================================*/
/*====================================================================================================*/

typedef enum
{
	PUSH_PULL=0,
	OPEN_DRAIN
}OutputType_t;



/*====================================================================================================*/
/*=====================================      PullUpDown enum    ======================================*/
/*====================================================================================================*/

typedef enum
{
	NO_PULL=0,
	PULL_UP,
	PULL_DOWN
}PullUpDown_t;


/*====================================================================================================*/
/*=====================================      Pin Value enum     ======================================*/
/*====================================================================================================*/

typedef enum
{
	PIN_LOW=0,
	PIN_HIGH
}PinValue_t;


/*====================================================================================================*/
/*===============================     Alternate Function type enum    ================================*/
/*====================================================================================================*/

typedef enum
{
	AL0=0 ,
	AL1  ,
	AL2  ,
	AL3  ,
	AL4  ,
	AL5  ,
	AL6  ,
	AL7  ,
	AL8  ,
	AL9  ,
	AL10 ,
	AL11 ,
	AL12 ,
	AL13 ,
	AL14 ,
	AL15 
}AlternateFunc_t;


/*====================================================================================================*/
/*====================================     Pin Config Struct    ======================================*/
/*====================================================================================================*/
typedef struct
{
	
	Port_t Port;
	Pin_t PinNum;
	Mode_t Mode;
	OutputSpeed_t Speed;
	OutputType_t OutputType;
	PullUpDown_t PullType;
	AlternateFunc_t ALF;
	
	
}PinConfig_t;

/*====================================================================================================*/
/*====================================     ProtoTypes Functions    ===================================*/
/*====================================================================================================*/


uint8_t GPIO_u8PinInit( const PinConfig_t* PinConfig);

uint8_t GPIO_u8SetPinValue(Port_t Port, Pin_t PinNub, PinValue_t PinValue );

uint8_t GPIO_u8TogPinValue(Port_t Port, Pin_t PinNub);

uint8_t GPIO_u8GetPinValue(Port_t Port, Pin_t PinNub, PinValue_t* PinValue );




#endif